import os

# first, find matches to filenames of this form:
with open('sra_list.txt') as fh:
    sampleNames = [line.strip() for line in fh]

rule all:
    input:
        expand("fastq_files/{sra_id}_inter.fq.gz", sra_id=sampleNames),
        # expand("fastq_files/{sra_id}_aligned.fq.gz", sra_id=sampleNames),
        # expand("fastq_files/{sra_id}_filtered.fq.gz", sra_id=sampleNames)

# fasterq-dump with prefetch is faster option when using full files, but for troubleshooting workflow the below is great for subsetting reads
# this will download the .sra files (will create directory if not present)
# I didnt find a great way to use the list of biosample names as inputs without also using them as outputs
# scripts/download_files.py included for modifying to prefetch fasterq-dump 
rule fastq_dump_rule:
    output:
        "fastq_files/{sra_id}_1.fastq",
        "fastq_files/{sra_id}_2.fastq"
    shell:
        "fastq-dump --outdir fastq_files -X 10000 --skip-technical --split-3 {wildcards.sra_id}"

rule rename_rule:
    input:
        "fastq_files/{sra_id}_{n}.fastq",
    output:
        "fastq_files/{sra_id}_R{n}.fastq",
    shell:
        "mv {input} {output}"

rule compress_rule:
    input:
        r1 = "fastq_files/{sra_id}_R1.fastq",
        r2 = "fastq_files/{sra_id}_R2.fastq"
    output:
        "fastq_files/{sra_id}_R1.fastq.gz",
        "fastq_files/{sra_id}_R2.fastq.gz"
    shell:
        "pigz -p 2 {input.r1} {input.r2}"

rule interleave_rule:
    input:
        r1="fastq_files/{sra_id}_R1.fastq.gz",
        r2="fastq_files/{sra_id}_R2.fastq.gz"
    output:
        "fastq_files/{sra_id}_inter.fastq.gz"
    shell:
        "reformat.sh in1={input.r1} in2={input.r2} out={output}"

rule trim_rule:
    input:
        "fastq_files/{sra_id}_inter.fastq.gz",
    output:
        r1="fastq_files/{sra_id}_R1.fq.gz",
        r2="fastq_files/{sra_id}_R2.fq.gz",
        h="fastp.html",
        j="fastp.json"
    shell:
        "fastp --interleaved_in -i {input} -o {output.r1} -O {output.r2} -h {output.h} -j {output.j}" 

rule interleave_trimmed_rule:
    input:
        r1="fastq_files/{sra_id}_R1.fq.gz",
        r2="fastq_files/{sra_id}_R2.fq.gz"
    output:
        "fastq_files/{sra_id}_inter.fq.gz"
    shell:
        "reformat.sh in1={input.r1} in2={input.r2} out={output}"

## If desired filter out the marine microbial rRNA reads before assembly and read mapping
## Adjustments would need to be made to the rule all and the inputs for the subsequent Snakefiles
# rule sortmerna_prep_rule:
#     output:
#         "sortmerna/rRNA_databases_v4/smr_v4.3_default_db.fasta",
#         "sortmerna/rRNA_databases_v4/smr_v4.3_fast_db.fasta",
#         "sortmerna/rRNA_databases_v4/smr_v4.3_sensitive_db.fasta",
#         "sortmerna/rRNA_databases_v4/smr_v4.3_sensitive_db_rfam_seeds.fasta"
#     shell:"""
#     wget https://github.com/biocore/sortmerna/releases/download/v4.3.4/database.tar.gz
#     mkdir -p sortmerna/
#     mkdir -p sortmerna/rRNA_databases_v4
#     tar -xvf database.tar.gz -C sortmerna/rRNA_databases_v4
#     """
# 
# rule remove_rrna_rule:
#     input:
#         ref1 = "sortmerna/rRNA_databases_v4/smr_v4.3_default_db.fasta",
#         ref2 =  "sortmerna/rRNA_databases_v4/smr_v4.3_fast_db.fasta",
#         ref3 = "sortmerna/rRNA_databases_v4/smr_v4.3_sensitive_db.fasta",
#         ref4 = "sortmerna/rRNA_databases_v4/smr_v4.3_sensitive_db_rfam_seeds.fasta",
#         infile = "fastq_files/{sra_id}_inter.fq.gz",
#     output:
#         "fastq_files/{sra_id}_aligned.fq.gz",
#         "fastq_files/{sra_id}_filtered.fq.gz"
#     params:
#         aligned="fastq_files/{sra_id}_aligned",
#         other="fastq_files/{sra_id}_filtered"
#     # sortmerna has an unorthodox wildcard usage
#     # shell:
#     #     "scripts/run_sortmerna_interleaved.sh"
#     shell:
#         "sortmerna \
#         --ref sortmerna/rRNA_databases_v4/smr_v4.3_default_db.fasta \
#         --reads {input.infile} \
#         --aligned {params.aligned} \
#         --other {params.other} \
#         --paired \
#         --paired_in \
#         --fastx \
#         -threads 2 \
#         -workdir sortmerna/run_{wildcards.sra_id} \
#         -v"

